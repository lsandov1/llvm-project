.. _slp-terminology:

======================
 LLVM SLP Terminology
======================

.. contents::
   :local:

Introduction
============

Key Terminology
===============

Superword - Packed data stored in either a register or memory location.

Superword Operations - synonym for SIMD. Instructions that operate concurrently on a superword.

Instruction Level Parallelism (ILP) - 

Superword Level Parallelism (SLP) - Short SIMD parallelism in which
the source and result operands of a SIMD operation are packed in a storage location.

Isomorphic Statements - statements that contain the same operations in the
same order.

Statement packing - Statements can be executed in parallel by a technique called
statement packing. For example, the following ``C`` code

.. code-block:: C

  a = b + c * z[i+0];
	d = e + f * z[i+1];
	r = s + t * z[i+2];
	w = x + y * z[i+3];

In the above example, source operands in the corresponding positions have been
packed into registers and addition and multiplication operators have been
replaced by the SIMD counterparts.

Vector Factor (VF) - Number of different consecutive iterations of the loop
that are combined into a single vector iteration in the vectorized
loop. The VF is determined according to the data types that appear in the loop
and the Vector Size (VS) supported by the target platforms.

Vector Size (VS) - For a certain data type (e.g. char) , the number of elements
that fit a vector register (e.g. 32 chars in a 256-bits vector register).

Loop-Aware SLP - SLP borrows the loop-aware ability to consider different
unrolling factors, potential to amortize costs across loop iterations and
handle more elaborate seeds.

SLP seeds - group of statements feasible for SLP vectorization.

Register pressure - Demand on CPU registers generated by the compiler

Straight-line code - Code that is not part of a loop.

Interleave accesses - Data that is accessed in the loop with a non-consecutive
(strided) pattern.

.. [LAR2000] Samuel Larsen and Saman Amarasinghe. 2000. Exploiting superword level parallelism with multimedia instruction sets.  In <em>Proceedings of the ACM SIGPLAN 2000 conference on Programming language design and implementation</em> (PLDI '00). ACM, New York, NY, USA,  145-156. DOI: https://doi.org/10.1145/349299.349320
